{
  "openapi": "3.1.0",
  "info": {
    "title": "Lumyo API documentation",
    "description": "API documentation for Lumyo",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://lumyo.co/api"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/audiences": {
      "get": {
        "description": "Returns all audiences from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audience response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Audience"
                  }
                },
                "examples": {
                  "audiences_list": {
                    "summary": "List of audiences",
                    "value": [
                      {
                        "id": 1,
                        "name": "Newsletter Subscribers",
                        "created_at": "2024-01-15T10:30:00Z"
                      },
                      {
                        "id": 2,
                        "name": "Premium Users",
                        "created_at": "2024-01-10T14:20:00Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "invalid_request": {
                    "summary": "Invalid request parameters",
                    "value": {
                      "error": 400,
                      "message": "Invalid limit parameter. Must be between 1 and 100."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new audience in the store",
        "requestBody": {
          "description": "Audience to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAudience"
              },
              "examples": {
                "new_audience": {
                  "summary": "Create new audience",
                  "value": {
                    "name": "VIP Customers",
                    "tag": "vip"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Audience created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Audience"
                },
                "examples": {
                  "created_audience": {
                    "summary": "Newly created audience",
                    "value": {
                      "id": 3,
                      "name": "VIP Customers",
                      "tag": "vip",
                      "created_at": "2024-01-20T09:15:00Z",
                      "contacts_count": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "validation_error": {
                    "summary": "Validation failed",
                    "value": {
                      "error": 400,
                      "message": "Name field is required and must be at least 3 characters long."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/audiences/{id}": {
      "get": {
        "description": "Returns a single audience based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of audience to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audience response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Audience"
                },
                "examples": {
                  "single_audience": {
                    "summary": "Single audience details",
                    "value": {
                      "id": 1,
                      "name": "Newsletter Subscribers",
                      "created_at": "2024-01-15T10:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Audience not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "not_found": {
                    "summary": "Audience not found",
                    "value": {
                      "error": 404,
                      "message": "Audience with ID 999 not found."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a single audience based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of audience to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Audience deleted successfully"
          },
          "404": {
            "description": "Audience not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "not_found": {
                    "summary": "Audience not found",
                    "value": {
                      "error": 404,
                      "message": "Audience with ID 999 not found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Audience": {
        "type": "object",
        "required": [
          "id",
          "name"
        ]
      },
      "NewAudience": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the audience"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code"
          },
          "message": {
            "type": "string",
            "description": "Human-readable error message"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}